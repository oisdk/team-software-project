Monopoly Backend
================

This is the backend for the monopoly app.

It is currently a skeleton, based on https://github.com/pypa/sampleproject.

SSE Events
----------

This table shows which SSE events are being generated by the backend. Anything
in angle brackets (<>) is a placeholder – <gameID> would be replaced by a
game id.

+---------------+-------------------------------------------------------+
| Event         | Format (what's in the "data:" payload)                |
+===============+=======================================================+
| playerJoin    | [<username1>, <username2>, …]                         |
+---------------+-------------------------------------------------------+
| gameStart     | <gameID>                                              |
+---------------+-------------------------------------------------------+
| playerMove    | [[<uid1>, <pos1>], [<uid2>, <pos2>], …]               |
+---------------+-------------------------------------------------------+
| playerTurn    | <userID>                                              |
+---------------+-------------------------------------------------------+
| playerBalance | [[<userId1>, <balance1>], [<userId2>, <balance2>], …] |
+---------------+-------------------------------------------------------+

Writing Server-sent Event Generators (refers to events.py)
##########################################################

1. Write a new function that takes a meaningful argument (e.g. game) and
   performs some "check" in the database (e.g. Check if some value in the
   database changed), see check_game_playing_status() in
   check_game_playing_status for a straight-forward example.
2. If the 'check' within the function you have written above passes, it
   should call another function (which you will write) to generate an event
   for the client (e.g. generate_game_start_event() in events.py).
   Read the comments in generate_game_start_event for some guidance on the
   sending of event types and the data payload.
3. Finally, add the call to the function you wrote in 1) to
   start_sse_stream(). Make sure it's above the call to sleep(). Notice
   the call to check_game_playing_status() in start_sse_stream() in events.py.
